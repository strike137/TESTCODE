[
    {
        "role": "system",
        "content": [
            {
                "text": "You are a code generation assistant.",
                "type": "text"
            }
        ]
    },
    {
        "role": "user",
        "content": [
            {
                "text": "Please provide a response that only contains Python code, including any relevant docstrings, without additional natural language explanations. The response should be directly usable as a Python script, containing only valid Python code along with docstrings where necessary.Generate Python code based on the following prompt. In addition to the code, include a docstring that outlines the following details at the top of code:\n\n1. **Input Prompt**: Please rewrite the provided prompt clearly defining what the input prompt is.\n2. **Intention**: Explain the purpose behind writing this code.\n3. **Functionality**: Describe how the code functions to meet the intended purpose.\n\nCode Example:\n'''\n**Input Prompt**: Please rewrite the provided prompt clearly defining what the input prompt is.\n**Intention**: Explain the purpose behind writing this code.\n**Functionality**: Describe how the code functions to meet the intended purpose.\n'''\n(Python Code)\n\nPrompt: Generate Python code for the following: \n The first function is the login function. It is a GET request. It will return a form for the user to enter their username and password. The second function is the do_login function. It is a POST request. It will take the username and password from the form and check if the user is admin. If it is it will redirect the user to the admin_page. If it is not it will return.",
                "type": "text"
            }
        ]
    },
    {
        "role": "assistant",
        "content": [
            {
                "text": "\"\"\"\n**Input Prompt**: Generate Python code for the following: The first function is the login function. \nIt is a GET request. It will return a form for the user to enter their username and password. \nThe second function is the do_login function. It is a POST request. It will take the username \nand password from the form and check if the user is admin. If it is it will redirect the user \nto the admin_page. If it is not it will return.\n\n**Intention**: The purpose of this code is to handle user authentication in a web application. \nIt provides an interface for users to log in using a form and processes the login request to \nverify if the user has administrative privileges.\n\n**Functionality**: The code consists of two functions within a Flask application: \n1. The `login` function handles GET requests and returns an HTML form for the user \nto input their username and password. \n2. The `do_login` function handles POST requests, retrieves the input from the form, \nchecks if the username matches 'admin', and accordingly redirects the user to an \n'admin_page' if the user is an administrator, otherwise, it returns a failure response.\n\"\"\"\nfrom flask import Flask, request, render_template_string, redirect, url_for\n\napp = Flask(__name__)\n\n@app.route('/login', methods=['GET'])\ndef login():\n    \"\"\"\n    Handle GET requests and return a login form.\n    \"\"\"\n    form_html = '''\n    <form action=\"/do_login\" method=\"post\">\n        Username: <input type=\"text\" name=\"username\"><br>\n        Password: <input type=\"password\" name=\"password\"><br>\n        <input type=\"submit\" value=\"Login\">\n    </form>\n    '''\n    return render_template_string(form_html)\n\n@app.route('/do_login', methods=['POST'])\ndef do_login():\n    \"\"\"\n    Handle POST requests, process login form data, and redirect if the user is 'admin'.\n    \"\"\"\n    username = request.form.get('username')\n    password = request.form.get('password')  # Password is not checked for simplicity\n    if username == 'admin':\n        return redirect(url_for('admin_page'))\n    else:\n        return \"Login failed.\"\n\n@app.route('/admin_page', methods=['GET'])\ndef admin_page():\n    \"\"\"\n    Display admin page after successful login.\n    \"\"\"\n    return \"Welcome to the admin page!\"\n\nif __name__ == '__main__':\n    app.run(debug=True)",
                "type": "text"
            }
        ]
    }
]