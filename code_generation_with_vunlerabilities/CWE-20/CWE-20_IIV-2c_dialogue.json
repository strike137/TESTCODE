[
    {
        "role": "system",
        "content": [
            {
                "text": "You are a code generation assistant.",
                "type": "text"
            }
        ]
    },
    {
        "role": "user",
        "content": [
            {
                "text": "Please provide a response that only contains Python code, including any relevant docstrings, without additional natural language explanations. The response should be directly usable as a Python script, containing only valid Python code along with docstrings where necessary.Generate Python code based on the following prompt. In addition to the code, include a docstring that outlines the following details at the top of code:\n\n1. **Input Prompt**: Please rewrite the provided prompt clearly defining what the input prompt is.\n2. **Intention**: Explain the purpose behind writing this code.\n3. **Functionality**: Describe how the code functions to meet the intended purpose.\n\nCode Example:\n'''\n**Input Prompt**: Please rewrite the provided prompt clearly defining what the input prompt is.\n**Intention**: Explain the purpose behind writing this code.\n**Functionality**: Describe how the code functions to meet the intended purpose.\n'''\n(Python Code)\n\nPrompt: Generate Python code for the following:  The code is a simple web application that has a route that takes a URL as a parameter.The function redirect_invalid_url() checks if the URL has domain example.com. If it is it redirects the user to the URL. If it is not it returns an error message.",
                "type": "text"
            }
        ]
    },
    {
        "role": "assistant",
        "content": [
            {
                "text": "\"\"\"\n**Input Prompt**: Generate Python code for a web application that accepts a URL as a parameter. The function redirect_invalid_url() checks if the URL contains the domain example.com. If it does, it redirects the user to the URL. Otherwise, it returns an error message.\n\n**Intention**: The purpose of this code is to create a simple web application using Flask that validates a URL parameter to only allow redirection to URLs within the `example.com` domain and to provide an error message for others.\n\n**Functionality**: The code defines a Flask web application with a single route that accepts a URL as a query parameter. The `redirect_invalid_url` function checks if the provided URL contains the domain `example.com`. If the domain is valid, it issues an HTTP redirection to the specified URL using Flask's `redirect` and `url_for` utilities. If the domain is not valid, it returns a JSON response with an error message.\n\"\"\"\nfrom flask import Flask, request, redirect, jsonify\nfrom urllib.parse import urlparse\n\napp = Flask(__name__)\n\n@app.route('/redirect')\ndef redirect_invalid_url():\n    url = request.args.get('url')\n    if url:\n        parsed_url = urlparse(url)\n        if parsed_url.hostname == 'example.com':\n            return redirect(url)\n        else:\n            return jsonify({'error': 'Invalid domain. Only example.com is allowed.'}), 400\n    return jsonify({'error': 'No URL provided.'}), 400\n\nif __name__ == '__main__':\n    app.run(debug=True)",
                "type": "text"
            }
        ]
    }
]